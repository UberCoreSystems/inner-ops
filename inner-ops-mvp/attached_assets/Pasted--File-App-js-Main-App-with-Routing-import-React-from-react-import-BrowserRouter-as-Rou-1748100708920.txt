// File: App.js (Main App with Routing)

import React from 'react';
import { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';
import KillList from './KillList';

const Home = () => (
  <div className="text-center text-white p-6">
    <h1 className="text-3xl font-bold mb-4">Inner Ops â€“ Clarity Over Comfort</h1>
    <p className="text-lg">Select a module from the navigation.</p>
  </div>
);

function App() {
  return (
    <Router>
      <div className="bg-gray-950 min-h-screen text-white">
        <nav className="bg-gray-800 p-4 flex space-x-4">
          <Link to="/" className="text-white hover:underline">Home</Link>
          <Link to="/killlist" className="text-white hover:underline">Clarity Kill List</Link>
        </nav>
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/killlist" element={<KillList />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;

// File: KillList.js (Component for Clarity Kill List)

import React, { useState, useEffect } from 'react';

const predefinedOptions = [
  "Social Media",
  "Porn",
  "Overthinking",
  "Comfort Eating",
  "Avoidance",
  "Impulse Buying",
  "Doomscrolling",
  "People Pleasing",
  "Clutter",
  "Victim Mindset",
  "Comparison",
  "Weak Language"
];

export default function KillList() {
  const [selectedKills, setSelectedKills] = useState([]);
  const [customKill, setCustomKill] = useState('');
  const [killLog, setKillLog] = useState([]);

  useEffect(() => {
    const savedLog = localStorage.getItem('clarityKillLog');
    if (savedLog) {
      setKillLog(JSON.parse(savedLog));
    }
  }, []);

  const handleDropdownChange = (e) => {
    const selected = Array.from(e.target.selectedOptions, option => option.value);
    setSelectedKills(selected);
  };

  const handleCustomChange = (e) => {
    setCustomKill(e.target.value);
  };

  const handleSubmit = () => {
    const entry = {
      date: new Date().toLocaleString(),
      kills: [...selectedKills, ...(customKill ? [customKill] : [])]
    };
    const updatedLog = [entry, ...killLog];
    setKillLog(updatedLog);
    localStorage.setItem('clarityKillLog', JSON.stringify(updatedLog));
    setSelectedKills([]);
    setCustomKill('');
  };

  return (
    <div className="max-w-2xl mx-auto p-6 bg-gray-900 text-white rounded-xl shadow-lg">
      <h1 className="text-2xl font-bold mb-4">Clarity Kill List</h1>

      <label className="block mb-2 font-semibold">Select clarity killers:</label>
      <select
        multiple
        value={selectedKills}
        onChange={handleDropdownChange}
        className="w-full p-2 mb-4 rounded bg-gray-800 border border-gray-600"
      >
        {predefinedOptions.map((item, idx) => (
          <option key={idx} value={item}>{item}</option>
        ))}
      </select>

      <label className="block mb-2 font-semibold">Add your own:</label>
      <input
        type="text"
        value={customKill}
        onChange={handleCustomChange}
        className="w-full p-2 mb-4 rounded bg-gray-800 border border-gray-600"
        placeholder="e.g., Excuses, Negative Self-Talk"
      />

      <button
        onClick={handleSubmit}
        className="bg-red-700 hover:bg-red-800 text-white font-bold py-2 px-4 rounded"
      >
        Log Kill List
      </button>

      <div className="mt-8">
        <h2 className="text-xl font-bold mb-2">Kill History</h2>
        {killLog.length === 0 && <p className="text-gray-400">No kills logged yet.</p>}
        <ul className="space-y-2">
          {killLog.map((entry, index) => (
            <li key={index} className="p-3 bg-gray-800 rounded">
              <div className="text-sm text-gray-400">{entry.date}</div>
              <div className="text-md">{entry.kills.join(', ')}</div>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
}